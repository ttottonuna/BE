<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.kdt.mooluck.domain.interaction.mapper.InteractionMapper">

    <!-- pet_count와 total_count 증가 -->
    <insert id="insertIfNotExists">
        INSERT INTO interaction (elder_id, water_count, pet_count, total_count, date,
                                 first_interval, second_interval, third_interval, fourth_interval, status)
        SELECT #{elderId}, 0, 0, 0, CURDATE(), 0, 0, 0, 0, '위험'
            WHERE NOT EXISTS (
        SELECT 1
        FROM interaction
        WHERE elder_id = #{elderId}
                AND DATE(date) = CURDATE()
                );
    </insert>

    <update id="incrementPetCount">
        UPDATE interaction
        SET pet_count = pet_count + 1,
            total_count = total_count + 1,
            date = NOW(),
            first_interval = CASE
                                WHEN HOUR(NOW()) BETWEEN 0 AND 5 THEN first_interval + 1
            ELSE first_interval
            END,
            second_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 6 AND 11 THEN second_interval + 1
                ELSE second_interval
            END,
            third_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 12 AND 17 THEN third_interval + 1
                ELSE third_interval
            END,
            fourth_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 18 AND 23 THEN fourth_interval + 1
                ELSE fourth_interval
            END,
            status = CASE
                        WHEN total_count + 1 = 0 THEN '위험'
                        WHEN total_count + 1 = 1 THEN '경고'
                        ELSE '양호'
            END
        WHERE elder_id = #{elderId}
        AND DATE(date) = CURDATE();
    </update>

    <!-- water_count와 total_count 증가 -->
    <update id="incrementWaterCount">
        UPDATE interaction
        SET water_count = water_count + 1,
            total_count = total_count + 1,
            date = NOW(),
            first_interval = CASE
                                 WHEN HOUR(NOW()) BETWEEN 0 AND 5 THEN first_interval + 1
            ELSE first_interval
            END,
            second_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 6 AND 11 THEN second_interval + 1
                ELSE second_interval
            END,
            third_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 12 AND 17 THEN third_interval + 1
                ELSE third_interval
            END,
            fourth_interval = CASE
                WHEN HOUR(NOW()) BETWEEN 18 AND 23 THEN fourth_interval + 1
                ELSE fourth_interval
            END,
            status = CASE
                        WHEN total_count + 1 = 0 THEN '위험'
                        WHEN total_count + 1 = 1 THEN '경고'
                        ELSE '양호'
            END
        WHERE elder_id = #{elderId}
        AND DATE(date) = CURDATE();
    </update>

    <insert id="PreviousDayData">
        INSERT INTO interaction (elder_id, water_count, pet_count, total_count, date,
                                 first_interval, second_interval, third_interval, fourth_interval, status)
        SELECT DISTINCT elder_id, water_count, pet_count, total_count, CONCAT(DATE(CURDATE() - INTERVAL 1 DAY), ' 00:00:00'),
                        first_interval, second_interval, third_interval, fourth_interval,
                        CASE
                            WHEN total_count = 0 THEN '위험'
                            WHEN total_count = 1 THEN '경고'
                            ELSE '양호'
                            END
        FROM interaction
        WHERE DATE(date) = CURDATE() - INTERVAL 1 DAY
          AND NOT EXISTS (
            SELECT 1
            FROM interaction
            WHERE DATE(date) = CURDATE() - INTERVAL 1 DAY
          AND elder_id = interaction.elder_id
            );
    </insert>
    <insert id="resetCounts">
        -- 오늘 날짜의 elder_id가 없을 때 모두 count 0인 row를 추가해주기
        INSERT INTO interaction (elder_id, water_count, pet_count, total_count, date,
                                 first_interval, second_interval, third_interval, fourth_interval, status)
        SELECT DISTINCT e.elder_id, 0, 0, 0, NOW(), 0, 0, 0, 0, '위험'
        FROM elder e
        WHERE NOT EXISTS ( -- 오늘 날짜의 elder_id가 없을 때에(not exists) select distinct 문이 실행됨
            SELECT 1
            FROM interaction i
            WHERE DATE(i.date) = DATE(NOW()) -- 날짜 기준 중복 확인
                AND i.elder_id = e.elder_id
        )
        -- GROUP BY i.elder_id; -- 중복 삽입 방지
    </insert>


</mapper>
